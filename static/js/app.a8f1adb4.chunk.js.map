{"version":3,"sources":["boxgrid.js","App.js"],"names":["mySocket","io","AspectGrid","useState","LayoutH","setLayoutH","LayoutW","setLayoutW","View","style","height","width","position","onLayout","e","nativeEvent","layout","left","top","Grid","styles","StyleSheet","create","container","backgroundColor","alignItems","justifyContent","flexDirection","row","flex","Array","from","length","_","k","__","i","ColorBox","boxid","props","modal","setModal","color","setColor","on","prop","id","box","borderColor","borderWidth","Platform","OS","cursor","modalholder","modalbox","borderRadius","myModalProp","Modal","animationType","transparent","visible","ModalColorPick","colorPick","Button","onPress","title","TouchableHighlight","minHeight","borderTopLeftRadius","borderTopRightRadius","flexGrow","boxColors","c","TouchableWithoutFeedback","underlayColor","emit","Text","App"],"mappings":"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","file":"static/js/app.a8f1adb4.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { \r\n    StyleSheet, View, Text, Button, Platform,\r\n    Modal, TouchableHighlight, TouchableWithoutFeedback\r\n} from 'react-native';\r\nimport { io } from 'socket.io-client';\r\n\r\nvar mySocket = io('http://192.168.1.38:3000');\r\n\r\nexport default\r\nfunction AspectGrid() {\r\n    const [LayoutH, setLayoutH] = useState();\r\n    const [LayoutW, setLayoutW] = useState();\r\n\r\n    return(\r\n        <View style={{height: '100%',width: '100%'}}>\r\n            <View style={{height: '100%',width: '100%', position: 'absolute'}}\r\n                onLayout={e => {\r\n                    setLayoutH(e.nativeEvent.layout.height);\r\n                    setLayoutW(e.nativeEvent.layout.width);\r\n            }}>\r\n                <View style={{\r\n                    width:LayoutH>LayoutW ? LayoutW : LayoutH,\r\n                    height:LayoutH>LayoutW ? LayoutW : LayoutH,\r\n                    left: LayoutH && LayoutW && LayoutH<LayoutW ? (LayoutW-LayoutH)/2 : 0,\r\n                    top:LayoutH && LayoutW && LayoutH>LayoutW ? (LayoutH-LayoutW)/2: 0,\r\n                }}>\r\n                    <Grid/>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nfunction Grid() {\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            height:'100%',\r\n            width:'100%',\r\n            backgroundColor: '#fff',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n        },\r\n        row: {\r\n            flex:1,\r\n            width:'100%',\r\n            backgroundColor: '#fff',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flexDirection: 'row',\r\n        },\r\n      });\r\n    const dim = 10;\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {Array.from({ length: dim }, (_,k) =>\r\n                <View style={styles.row}>\r\n                    {Array.from({ length: dim }, (__,i) => <ColorBox boxid={i+k*dim}/>)}\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n}\r\n\r\nfunction ColorBox(props){\r\n    const [modal, setModal] = useState(false);\r\n    const [color, setColor] = useState(props.color??'white');\r\n\r\n    mySocket.on('gridupdate',(prop)=>{\r\n        if(prop.id === props.boxid) setColor(prop.color);\r\n    });\r\n\r\n    const styles = StyleSheet.create({\r\n        box: Object.assign({},{\r\n            flex: 1,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: '100%',\r\n            borderColor: 'rgba(255, 0, 0, .8)',\r\n            borderWidth: 1,\r\n        },Platform.OS==='web'? {cursor:'pointer'}:null),\r\n        modalholder:{\r\n            flex:1,\r\n            alignItems:'center',\r\n            justifyContent:'center',\r\n            backgroundColor:'rgba(186, 255, 205, .7)',\r\n        },\r\n        modalbox:{\r\n            alignItems:'center',\r\n            justifyContent:'center',\r\n            width: '70%',\r\n            backgroundColor: '#c4c1c0',\r\n            borderRadius: 10,\r\n        }\r\n      });\r\n    \r\n    const myModalProp =\r\n        <Modal animationType='fade' transparent={true} visible={modal}>\r\n            <View style={styles.modalholder}>\r\n                <View style={styles.modalbox}>\r\n                    <ModalColorPick colorPick={setColor} boxid={props.boxid}/>\r\n                    \r\n                        <View style={{width:'80%', alignItems:'flex-end'}}>\r\n                            <Button onPress={()=>setModal(false)} title=\"Close\"/>\r\n                        </View>\r\n                </View>\r\n            </View>\r\n            {Platform.OS==='web'?null:<Button onPress={()=>setModal(false)} title=\"Close\"/>}\r\n        </Modal>;\r\n    \r\n    return (\r\n        <View style={[styles.box, {backgroundColor: color,}]}>\r\n            <TouchableHighlight style={{width:'100%', height:'100%'}} onPress={()=>setModal(true)}>\r\n                {myModalProp}\r\n            </TouchableHighlight>\r\n        </View>\r\n    );\r\n}\r\n\r\nfunction ModalColorPick(props){\r\n    const styles = StyleSheet.create({\r\n        row: {\r\n            flex:1,\r\n            width:'100%',\r\n            minHeight:60,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flexDirection: 'row',\r\n            backgroundColor:'#808080',\r\n            borderTopLeftRadius: 10,\r\n            borderTopRightRadius: 10,\r\n        },\r\n        colorPick: Object.assign({},{\r\n            height:'100%',\r\n            flexGrow:1,\r\n        },Platform.OS==='web'? {cursor:'pointer'}:null),\r\n    });\r\n    \r\n    const boxColors=[\r\n        '#FFFFFF',\r\n        '#E4E4E4',\r\n        '#888888',\r\n        '#222222',\r\n        '#FFA7D1',\r\n        '#E50000',\r\n        '#E59500',\r\n        '#A06A42',\r\n        '#E5D900',\r\n        '#94E044',\r\n        '#02BE01',\r\n        '#00D3DD',\r\n        '#0083C7',\r\n        '#0000EA',\r\n        '#CF6EE4',\r\n        '#820080'\r\n    ];\r\n\r\n    return(\r\n        <View style={styles.row}>\r\n            {Array.from(boxColors, (c,i) =>\r\n                <TouchableWithoutFeedback underlayColor={c} onPress={()=>{\r\n                    //props.colorPick(boxColors[i]);\r\n                    mySocket.emit('boxchange',{color:boxColors[i],id:props.boxid});\r\n                }}\r\n                style={[styles.colorPick,\r\n                    i===0?{borderTopLeftRadius:10,}:null,\r\n                    i===boxColors.length-1?{borderTopRightRadius:10,}:null,\r\n                ]}>\r\n                    <View style={[styles.colorPick,{backgroundColor:c,},\r\n                        i===0?{borderTopLeftRadius:10,}:null,\r\n                        i===boxColors.length-1?{borderTopRightRadius:10,}:null,\r\n                    ]}><Text/>\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n            )}\r\n        </View>\r\n    );\r\n}","import { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport AspectGrid from './boxgrid';\n\nexport default function App() {\n\n  return (\n    <View style={styles.container}>\n      <View style={{height:'50%',width:'50%'}}>\n        <AspectGrid/>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"sourceRoot":""}